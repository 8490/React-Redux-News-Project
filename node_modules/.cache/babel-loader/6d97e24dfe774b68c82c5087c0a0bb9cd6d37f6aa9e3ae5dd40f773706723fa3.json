{"ast":null,"code":"//! rxSlice\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  newsList: [],\n  loading: false,\n  error: false\n};\nexport const getNews = createAsyncThunk(\"getNews\", async (thunkAPI, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  const API_KEY = \"812358b77f264bc580a7e797d585859c\";\n  const url = `https://newsapi.org/v2/top-headlines?country=tr&apiKey=${API_KEY}`;\n  try {\n    const {\n      data\n    } = await axios(url);\n    return data.articles;\n  } catch (error) {\n    console.log(error);\n  }\n});\nconst newsSlice = createSlice({\n  name: \"news\",\n  initialState,\n  reducers: {\n    clearNewsList: state => {\n      state.newsList = [];\n    }\n  },\n  extrareducers: builder => {\n    builder.addCase(getNews.pending, state => {\n      state.loading = true;\n    }).addCase(getNews.fulfilled, (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.newsList = payload;\n      state.loading = false;\n    }).addCase(getNews.rejected, state => {\n      state.loading = false;\n      state.error = true;\n    });\n  }\n});\nexport const {\n  clearNewsList\n} = newsSlice.actions;\nexport default newsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","newsList","loading","error","getNews","thunkAPI","rejectWithValue","API_KEY","url","data","articles","console","log","newsSlice","name","reducers","clearNewsList","state","extrareducers","builder","addCase","pending","fulfilled","payload","rejected","actions","reducer"],"sources":["/home/san/React/React-Redux-News-Project/src/features/newsSlice.jsx"],"sourcesContent":["//! rxSlice\n\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  newsList: [],\n  loading: false,\n  error: false,\n};\n\nexport const getNews = createAsyncThunk(\n  \"getNews\",\n  async (thunkAPI, { rejectWithValue }) => {\n    const API_KEY = \"812358b77f264bc580a7e797d585859c\";\n    const url = `https://newsapi.org/v2/top-headlines?country=tr&apiKey=${API_KEY}`;\n    try {\n      const { data } = await axios(url);\n      return data.articles;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n);\n\nconst newsSlice = createSlice({\n  name: \"news\",\n  initialState,\n  reducers: {\n    clearNewsList: (state) => {\n      state.newsList = [];\n    },\n  },\n  extrareducers: (builder) => {\n    builder\n      .addCase(getNews.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(getNews.fulfilled, (state, { payload }) => {\n        state.newsList = payload;\n        state.loading = false;\n      })\n      .addCase(getNews.rejected, (state) => {\n        state.loading = false;\n        state.error = true;\n      });\n  },\n});\n\nexport const { clearNewsList } = newsSlice.actions;\n\nexport default newsSlice.reducer;\n"],"mappings":"AAAA;;AAEA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGN,gBAAgB,CACrC,SAAS,EACT,OAAOO,QAAQ,WAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC;EAClC,MAAMC,OAAO,GAAG,kCAAkC;EAClD,MAAMC,GAAG,GAAI,0DAAyDD,OAAQ,EAAC;EAC/E,IAAI;IACF,MAAM;MAAEE;IAAK,CAAC,GAAG,MAAMV,KAAK,CAACS,GAAG,CAAC;IACjC,OAAOC,IAAI,CAACC,QAAQ;EACtB,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdQ,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;EACpB;AACF,CAAC,CACF;AAED,MAAMU,SAAS,GAAGhB,WAAW,CAAC;EAC5BiB,IAAI,EAAE,MAAM;EACZd,YAAY;EACZe,QAAQ,EAAE;IACRC,aAAa,EAAGC,KAAK,IAAK;MACxBA,KAAK,CAAChB,QAAQ,GAAG,EAAE;IACrB;EACF,CAAC;EACDiB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAChB,OAAO,CAACiB,OAAO,EAAGJ,KAAK,IAAK;MACnCA,KAAK,CAACf,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDkB,OAAO,CAAChB,OAAO,CAACkB,SAAS,EAAE,CAACL,KAAK,YAAkB;MAAA,IAAhB;QAAEM;MAAQ,CAAC;MAC7CN,KAAK,CAAChB,QAAQ,GAAGsB,OAAO;MACxBN,KAAK,CAACf,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDkB,OAAO,CAAChB,OAAO,CAACoB,QAAQ,EAAGP,KAAK,IAAK;MACpCA,KAAK,CAACf,OAAO,GAAG,KAAK;MACrBe,KAAK,CAACd,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEa;AAAc,CAAC,GAAGH,SAAS,CAACY,OAAO;AAElD,eAAeZ,SAAS,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}